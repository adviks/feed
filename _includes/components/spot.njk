<div class="spotify-now-playing">
  <div class="animation-container">
    <div class="playing-animation" id="wave-animation">
      <div class="bar"></div>
      <div class="bar"></div>
      <div class="bar"></div>
    </div>
    <div class="idle-dot" id="idle-dot"></div> <!-- Pulsing dot when idle -->
  </div>
  
  <div class="scrolling-wrapper">
    <div class="scrolling-text">
      <span id="song-text">Nothing playing</span>
      <span id="song-text-clone"></span>
    </div>
  </div>
</div>

<script>
  async function fetchNowPlaying() {
    try {
      const response = await fetch("https://spotify.asav.workers.dev/get-now-playing");
      const nowPlayingData = await response.json();
      const songText = document.getElementById("song-text");
      const songTextClone = document.getElementById("song-text-clone");
      const waveAnimation = document.getElementById("wave-animation");
      const idleDot = document.getElementById("idle-dot");
      const scrollingText = document.querySelector(".scrolling-text");
      
      if (nowPlayingData.is_playing && nowPlayingData.item) {
        const artists = nowPlayingData.item.artists.map(artist => artist.name).join(', ');
        const trackInfo = `${nowPlayingData.item.name} - ${artists}`;
        
        songText.innerText = trackInfo;
        songTextClone.innerText = trackInfo;

        // Adjust animation speed dynamically based on text length
        const textWidth = scrollingText.scrollWidth;
        const containerWidth = document.querySelector(".scrolling-wrapper").offsetWidth;
        const duration = Math.max(textWidth / 50, 6); // Ensure smooth speed

        scrollingText.style.animation = `marquee ${duration}s linear infinite`;

        // Show wave animation, hide idle dot
        waveAnimation.style.display = "flex";
        idleDot.style.display = "none";
      } else {
        songText.innerText = "Nothing playing";
        
        scrollingText.style.animation = "none"; // Stop scrolling

        // Hide wave animation, show idle dot
        waveAnimation.style.display = "none";
        idleDot.style.display = "block";
      }
    } catch (error) {
      console.error("Error fetching now playing data:", error);
    }
  }

  fetchNowPlaying();
  setInterval(fetchNowPlaying, 15000); // Refresh every 15 seconds
</script>

<style>
  .spotify-now-playing {
    display: flex;
    align-items: center;
    gap: 8px;
    width: 250px;
    overflow: hidden;
  }

  .animation-container {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 20px;
    height: 20px;
  }

  /* Wave animation (only when song is playing) */
  .playing-animation {
    display: flex;
    gap: 2px;
  }

  .bar {
    width: 3px;
    height: 8px;
    background-color: rgba(29, 185, 84, 0.8);
    border-radius: 2px;
    animation: wave 1.2s infinite ease-in-out;
  }

  .bar:nth-child(2) { animation-delay: 0.2s; }
  .bar:nth-child(3) { animation-delay: 0.4s; }

  @keyframes wave {
    0%, 100% { height: 8px; }
    50% { height: 15px; }
  }

  /* Pulsing dot when idle */
  .idle-dot {
    width: 8px;
    height: 8px;
    background-color: rgba(255, 255, 255, 0.6);
    border-radius: 50%;
    display: none;
    animation: pulse 1.5s infinite;
  }

  @keyframes pulse {
    0% { transform: scale(1); opacity: 0.6; }
    50% { transform: scale(1.3); opacity: 1; }
    100% { transform: scale(1); opacity: 0.6; }
  }

  /* Smooth scrolling effect */
  .scrolling-wrapper {
    width: 180px;
    overflow: hidden;
    white-space: nowrap;
    position: relative;
  }

  .scrolling-text {
    display: flex;
    width: max-content;
  }

  .scrolling-text span {
    display: inline-block;
    padding-right: 50px;
  }

  @keyframes marquee {
    from { transform: translateX(0); }
    to { transform: translateX(-100%); }
  }
</style>
